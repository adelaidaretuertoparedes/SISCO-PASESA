/*
Deployment script for SICO.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SICO.Database"
:setvar DefaultFilePrefix "SICO.Database"
:setvar DefaultDataPath "C:\Users\aretuerto\AppData\Local\Microsoft\VisualStudio\SSDT\SICO"
:setvar DefaultLogPath "C:\Users\aretuerto\AppData\Local\Microsoft\VisualStudio\SSDT\SICO"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 4a7325cf-2da9-45ab-a328-4e0ffdd4e06a is skipped, element [dbo].[SizeType].[IdClasification] (SqlSimpleColumn) will not be renamed to ClasificationId';


GO
PRINT N'Creating [dbo].[AvailableLegacyCode]...';


GO
CREATE TABLE [dbo].[AvailableLegacyCode] (
    [Id]     INT          IDENTITY (1, 1) NOT NULL,
    [Code]   VARCHAR (10) NOT NULL,
    [IdType] INT          NOT NULL,
    [Type]   VARCHAR (20) NOT NULL,
    CONSTRAINT [PK_dbo.AvailableLegacyCode] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Parameter]...';


GO
CREATE TABLE [dbo].[Parameter] (
    [Id]           NVARCHAR (30)  NOT NULL,
    [Name]         NVARCHAR (50)  NOT NULL,
    [Description]  NVARCHAR (200) NULL,
    [Status]       BIT            NOT NULL,
    [Maintainable] BIT            NOT NULL,
    CONSTRAINT [PK_dbo.Parameter] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ParameterDetail]...';


GO
CREATE TABLE [dbo].[ParameterDetail] (
    [Id]                      SMALLINT       IDENTITY (1, 1) NOT NULL,
    [Name]                    NVARCHAR (200) NOT NULL,
    [ParentParameterDetailId] SMALLINT       NULL,
    [ParameterId]             NVARCHAR (30)  NOT NULL,
    [Valor1]                  NVARCHAR (100) NULL,
    [Valor2]                  NVARCHAR (100) NULL,
    [Valor3]                  NVARCHAR (100) NULL,
    [CreationDate]            DATETIME       NOT NULL,
    [CreatorIpAddress]        VARCHAR (20)   NOT NULL,
    [CreatorUser]             VARCHAR (20)   NOT NULL,
    [Status]                  BIT            NOT NULL,
    [UpdateDate]              DATETIME       NULL,
    [UpdaterIpAddress]        VARCHAR (20)   NULL,
    [UpdaterUser]             VARCHAR (20)   NULL,
    CONSTRAINT [PK_dbo.ParameterDetail] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ParameterDetail].[IX_ParameterId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ParameterId]
    ON [dbo].[ParameterDetail]([ParameterId] ASC);


GO
PRINT N'Creating [dbo].[ParameterDetail].[IX_ParentParameterDetailId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ParentParameterDetailId]
    ON [dbo].[ParameterDetail]([ParentParameterDetailId] ASC);


GO
PRINT N'Creating [dbo].[TableParameter]...';


GO
CREATE TABLE [dbo].[TableParameter] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [IdTable]          VARCHAR (20)   NOT NULL,
    [Description]      VARCHAR (100)  NOT NULL,
    [CreationDate]     DATETIME       NOT NULL,
    [CreatorIpAddress] NVARCHAR (MAX) NULL,
    [CreatorUser]      NVARCHAR (MAX) NULL,
    [Status]           BIT            NOT NULL,
    [UpdateDate]       DATETIME       NULL,
    [UpdaterIpAddress] NVARCHAR (MAX) NULL,
    [UpdaterUser]      NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_dbo.TableParameter] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_dbo.ParameterDetail_dbo.Parameter_ParameterId]...';


GO
ALTER TABLE [dbo].[ParameterDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.ParameterDetail_dbo.Parameter_ParameterId] FOREIGN KEY ([ParameterId]) REFERENCES [dbo].[Parameter] ([Id]);


GO
PRINT N'Creating [dbo].[FK_dbo.ParameterDetail_dbo.ParameterDetail_ParentParameterDetailId]...';


GO
ALTER TABLE [dbo].[ParameterDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.ParameterDetail_dbo.ParameterDetail_ParentParameterDetailId] FOREIGN KEY ([ParentParameterDetailId]) REFERENCES [dbo].[ParameterDetail] ([Id]);


GO
PRINT N'Creating [dbo].[UFN_PadLeft]...';


GO
CREATE FUNCTION [dbo].[UFN_PadLeft]
(
	@TextToPad 	 	VARCHAR(8000),
	@CharacterToPad	VARCHAR(1),
	@NumberToPad	 	INT
)
RETURNS		VARCHAR(8000)
AS
BEGIN
	DECLARE	@OutputText VARCHAR(8000)
	
	SET		@OutputText = REPLICATE(@CharacterToPad, @NumberToPad) + @TextToPad	
	
	RETURN	RIGHT(@OutputText, @NumberToPad)
END
GO
PRINT N'Creating [dbo].[UFN_GetNextCodeSequence]...';


GO
CREATE FUNCTION [dbo].[UFN_GetNextCodeSequence]
(
    @SequencePrefix VARCHAR(5),
    @SequenceId INT,
	@SuffixLength INT=10
) RETURNS VARCHAR(20)
AS
BEGIN
    DECLARE @result varchar(20)
    SET @result = @SequencePrefix + dbo.UFN_PadLeft(@SequenceId,'0',@SuffixLength)
    RETURN @result    
END
GO
PRINT N'Creating [dbo].[Classification]...';


GO
CREATE TABLE [dbo].[Classification] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [ArticleGroupCode] VARCHAR (100) NOT NULL,
    [Name]             VARCHAR (50)  NOT NULL,
    [Active]           BIT           NOT NULL,
    [CreationDate]     DATETIME      NOT NULL,
    [CreatorIpAddress] VARCHAR (20)  NOT NULL,
    [CreatorUser]      VARCHAR (20)  NOT NULL,
    [Status]           BIT           NOT NULL,
    [UpdateDate]       DATETIME      NULL,
    [UpdaterIpAddress] VARCHAR (20)  NULL,
    [UpdaterUser]      VARCHAR (20)  NULL,
    [Code]             AS            ([dbo].[UFN_GetNextCodeSequence]('CL', [Id], (3))),
    CONSTRAINT [PK_dbo.Classification] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Color]...';


GO
CREATE TABLE [dbo].[Color] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [LegacyCode]       VARCHAR (50)  NOT NULL,
    [Name]             VARCHAR (60)  NOT NULL,
    [Active]           BIT           NOT NULL,
    [Status]           BIT           NOT NULL,
    [CreationDate]     DATETIME      NOT NULL,
    [CreatorIpAddress] NVARCHAR (20) NOT NULL,
    [CreatorUser]      NVARCHAR (20) NOT NULL,
    [UpdateDate]       DATETIME      NULL,
    [UpdaterIpAddress] NVARCHAR (20) NULL,
    [UpdaterUser]      NVARCHAR (20) NULL,
    [Code]             AS            ([dbo].[UFN_GetNextCodeSequence]('CR', [Id], (5))),
    CONSTRAINT [PK_dbo.Color] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Size]...';


GO
CREATE TABLE [dbo].[Size] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [Name]             VARCHAR (50)   NOT NULL,
    [LegacyCode]       VARCHAR (3)    NOT NULL,
    [Order]            INT            NOT NULL,
    [Status]           BIT            NOT NULL,
    [SizeTypeId]       INT            NOT NULL,
    [CreationDate]     DATETIME       NOT NULL,
    [CreatorIpAddress] NVARCHAR (MAX) NULL,
    [CreatorUser]      NVARCHAR (MAX) NULL,
    [UpdateDate]       DATETIME       NULL,
    [UpdaterIpAddress] NVARCHAR (MAX) NULL,
    [UpdaterUser]      NVARCHAR (MAX) NULL,
    [Code]             AS             ([dbo].[UFN_GetNextCodeSequence]('TL', [Id], (3))),
    CONSTRAINT [PK_dbo.Size] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Size].[IX_IdSizeType]...';


GO
CREATE NONCLUSTERED INDEX [IX_IdSizeType]
    ON [dbo].[Size]([SizeTypeId] ASC);


GO
PRINT N'Creating [dbo].[SizeType]...';


GO
CREATE TABLE [dbo].[SizeType] (
    [Id]               INT          IDENTITY (1, 1) NOT NULL,
    [Name]             VARCHAR (50) NOT NULL,
    [LegacyCode]       VARCHAR (3)  NOT NULL,
    [Active]           BIT          NOT NULL,
    [Status]           BIT          NOT NULL,
    [ClasificationId]  INT          NOT NULL,
    [CreationDate]     DATETIME     NOT NULL,
    [CreatorIpAddress] VARCHAR (20) NOT NULL,
    [CreatorUser]      VARCHAR (20) NOT NULL,
    [UpdateDate]       DATETIME     NULL,
    [UpdaterIpAddress] VARCHAR (20) NULL,
    [UpdaterUser]      VARCHAR (20) NULL,
    [Code]             AS           ([dbo].[UFN_GetNextCodeSequence]('TP', [Id], (3))),
    CONSTRAINT [PK_dbo.SizeType] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SizeType].[IX_IdClasification]...';


GO
CREATE NONCLUSTERED INDEX [IX_IdClasification]
    ON [dbo].[SizeType]([ClasificationId] ASC);


GO
PRINT N'Creating [dbo].[Trademark]...';


GO
CREATE TABLE [dbo].[Trademark] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Name]             VARCHAR (50)  NOT NULL,
    [CreationDate]     DATETIME      NOT NULL,
    [CreatorIpAddress] VARCHAR (20)  NOT NULL,
    [CreatorUser]      VARCHAR (20)  NOT NULL,
    [Status]           BIT           NOT NULL,
    [UpdateDate]       DATETIME      NULL,
    [UpdaterIpAddress] VARCHAR (20)  NULL,
    [UpdaterUser]      VARCHAR (20)  NULL,
    [Code]             AS            ([dbo].[UFN_GetNextCodeSequence]('MC', [Id], (4))),
    [ShortName]        VARCHAR (50)  NULL,
    [Owner]            VARCHAR (100) NULL,
    [LegacyCode]       VARCHAR (2)   NOT NULL,
    CONSTRAINT [PK_dbo.Trademark] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DF__Color__CreationD__145C0A3F]...';


GO
ALTER TABLE [dbo].[Color]
    ADD CONSTRAINT [DF__Color__CreationD__145C0A3F] DEFAULT ('1900-01-01T00:00:00.000') FOR [CreationDate];


GO
PRINT N'Creating [dbo].[DF__Color__CreatorIp__15502E78]...';


GO
ALTER TABLE [dbo].[Color]
    ADD CONSTRAINT [DF__Color__CreatorIp__15502E78] DEFAULT ('') FOR [CreatorIpAddress];


GO
PRINT N'Creating [dbo].[DF__Color__CreatorUs__164452B1]...';


GO
ALTER TABLE [dbo].[Color]
    ADD CONSTRAINT [DF__Color__CreatorUs__164452B1] DEFAULT ('') FOR [CreatorUser];


GO
PRINT N'Creating unnamed constraint on [dbo].[Size]...';


GO
ALTER TABLE [dbo].[Size]
    ADD DEFAULT ('1900-01-01T00:00:00.000') FOR [CreationDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[SizeType]...';


GO
ALTER TABLE [dbo].[SizeType]
    ADD DEFAULT ((0)) FOR [ClasificationId];


GO
PRINT N'Creating unnamed constraint on [dbo].[SizeType]...';


GO
ALTER TABLE [dbo].[SizeType]
    ADD DEFAULT ('1900-01-01T00:00:00.000') FOR [CreationDate];


GO
PRINT N'Creating [dbo].[FK_dbo.Size_dbo.SizeType_SizeType_Id]...';


GO
ALTER TABLE [dbo].[Size] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.Size_dbo.SizeType_SizeType_Id] FOREIGN KEY ([SizeTypeId]) REFERENCES [dbo].[SizeType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_dbo.SizeType_dbo.Classification_IdClasification]...';


GO
ALTER TABLE [dbo].[SizeType] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.SizeType_dbo.Classification_IdClasification] FOREIGN KEY ([ClasificationId]) REFERENCES [dbo].[Classification] ([Id]);


GO
PRINT N'Creating [dbo].[ArticleGroup]...';


GO
CREATE VIEW dbo.ArticleGroup
AS
SELECT  Id,
		Name,
		CAST(ISNULL(Valor1,0) AS int) AS Code
FROM	dbo.ParameterDetail
WHERE  ParameterId='main.ArticleGroup'
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4a7325cf-2da9-45ab-a328-4e0ffdd4e06a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4a7325cf-2da9-45ab-a328-4e0ffdd4e06a')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ParameterDetail] WITH CHECK CHECK CONSTRAINT [FK_dbo.ParameterDetail_dbo.Parameter_ParameterId];

ALTER TABLE [dbo].[ParameterDetail] WITH CHECK CHECK CONSTRAINT [FK_dbo.ParameterDetail_dbo.ParameterDetail_ParentParameterDetailId];

ALTER TABLE [dbo].[Size] WITH CHECK CHECK CONSTRAINT [FK_dbo.Size_dbo.SizeType_SizeType_Id];

ALTER TABLE [dbo].[SizeType] WITH CHECK CHECK CONSTRAINT [FK_dbo.SizeType_dbo.Classification_IdClasification];


GO
PRINT N'Update complete.';


GO
